package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"github.com/Itsjose.s/gqlgen-todos/graph/model"
)

// User is the resolver for the User field.
func (r *addressResolver) User(ctx context.Context, obj *model.Address) (*model.User, error) {
	var user *model.User
	return user, r.DB.Where("id like ?", obj.UserId).Take(&user).Error
}

// CreateNewAddress is the resolver for the CreateNewAddress field.
func (r *mutationResolver) CreateNewAddress(ctx context.Context, title string, address string, userID string) (*model.Address, error) {
	addresses := &model.Address{
		Title:   title,
		Address: address,
		UserId:  userID,
	}
	r.DB.Create(addresses)
	return addresses, nil
}

// GetUserAddress is the resolver for the GetUserAddress field.
func (r *queryResolver) GetUserAddress(ctx context.Context, userID string) ([]*model.Address, error) {
	var address []*model.Address
	r.DB.Where("user_id like ?", userID).Find(&address)
	return address, nil
}

// Address returns AddressResolver implementation.
func (r *Resolver) Address() AddressResolver { return &addressResolver{r} }

type addressResolver struct{ *Resolver }
