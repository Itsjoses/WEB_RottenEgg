package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"

	"github.com/Itsjose.s/gqlgen-todos/graph/model"
	"github.com/google/uuid"
)

// UpdateReview is the resolver for the UpdateReview field.
func (r *mutationResolver) UpdateReview(ctx context.Context, id string, pros string, cons string, overall string, star int) (*model.Review, error) {
	r.DB.Where("id like ?", id).Updates(model.Review{
		Pros:    pros,
		Cons:    cons,
		Overall: overall,
		Star:    star,
	})
	return nil, nil
}

// CreateReview is the resolver for the CreateReview field.
func (r *mutationResolver) CreateReview(ctx context.Context, input model.ReviewInput) (*model.Review, error) {
	review := &model.Review{
		ID:        uuid.NewString(),
		ProductId: input.ProductID,
		UserId:    input.UserID,
		ShopId:    input.ShopID,
		Pros:      input.Pros,
		Cons:      input.Cons,
		Overall:   input.Overall,
		Star:      input.Star,
	}
	r.DB.Create(review)
	return review, nil
}

// DeleteReview is the resolver for the DeleteReview field.
func (r *mutationResolver) DeleteReview(ctx context.Context, id string) (*model.Review, error) {
	var review *model.Review
	r.DB.Where("id like ?", id).Delete(&review)
	return nil, nil
}

// GetReview is the resolver for the GetReview field.
func (r *queryResolver) GetReview(ctx context.Context, userID string) ([]*model.Review, error) {
	var review []*model.Review
	r.DB.Where("user_id like ?", userID).Find(&review)
	return review, nil
}

// Product is the resolver for the Product field.
func (r *reviewResolver) Product(ctx context.Context, obj *model.Review) (*model.Product, error) {
	var product *model.Product
	return product, r.DB.Where("id like ?", obj.ProductId).Take(&product).Error
}

// User is the resolver for the User field.
func (r *reviewResolver) User(ctx context.Context, obj *model.Review) (*model.User, error) {
	var user *model.User
	return user, r.DB.Where("id like ?", obj.UserId).Take(&user).Error
}

// Shop is the resolver for the Shop field.
func (r *reviewResolver) Shop(ctx context.Context, obj *model.Review) (*model.Shop, error) {
	var shop *model.Shop
	return shop, r.DB.Where("id like ?", obj.ShopId).Take(&shop).Error
}

// Review returns ReviewResolver implementation.
func (r *Resolver) Review() ReviewResolver { return &reviewResolver{r} }

type reviewResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *reviewResolver) Star(ctx context.Context, obj *model.Review) (int, error) {
	panic(fmt.Errorf("not implemented: Star - Star"))
}
