package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"

	"github.com/Itsjose.s/gqlgen-todos/graph/model"
)

// TransactionHeader is the resolver for the TransactionHeader field.
func (r *transactionDetailResolver) TransactionHeader(ctx context.Context, obj *model.TransactionDetail) (*model.TransactionHeader, error) {
	var transactionHeader *model.TransactionHeader
	return transactionHeader, r.DB.Where("id like ?", obj.TransactionHeaderId).Take(&transactionHeader).Error
}

// Product is the resolver for the Product field.
func (r *transactionDetailResolver) Product(ctx context.Context, obj *model.TransactionDetail) (*model.Product, error) {
	var product *model.Product
	return product, r.DB.Where("id like ?", obj.ProductId).Take(&product).Error
}

// TransactionDetail returns TransactionDetailResolver implementation.
func (r *Resolver) TransactionDetail() TransactionDetailResolver {
	return &transactionDetailResolver{r}
}

type transactionDetailResolver struct{ *Resolver }
